name: Run Test, Quality and Release
on:
  push:
    branches:
      - '*'
permissions:
  contents: write
  pull-requests: write

env:
  PASSWORD_USER_TEST: "bella"
  NEW_PASSWORD_USER_TEST: "palla"
  DB_NAME: "WMS"
  DB_NAME_TEST_MIDDLEWARE: "WMS_TEST_MIDDLEWARE"
  DB_NAME_TEST_REPOSITORY: "WMS_TEST_REPOSITORY"
  DB_NAME_TEST_SERVICES: "WMS_TEST_SERVICES"
  DB_CONN_STRING: "mongodb://127.0.0.1:27017"
  USER_COLLECTION: "User"
  COUNTER_COLLECTION: "Counter"
  JWT_SECRET: "secret_key"
  PORT: "4001"

jobs:
  testJest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest]
        node-version: [ 18, 20 ]
        mongodb-version: ['6.0']
    timeout-minutes: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Start MongoDB
        uses: ankane/setup-mongodb@v1
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: Install Dependencies
        run: npm install
      - name: Run Tests
        run: npm test

      - name: Run EsLint quality check
        run: npm run eslint

  sonarCloudCheck:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: testJest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Dependencies
        run: npm install
      - name: Start MongoDB
        uses: ankane/setup-mongodb@v1
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: Test and coverage
        run: npm run coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  release-please:
    runs-on: ubuntu-latest
    needs: testJest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: google-github-actions/release-please-action@v4
        with:
          token: ${{ secrets.GIT_TOKEN }}
          release-type: simple

  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs:
      - testJest
      - sonarCloudCheck
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/wms-users:latest